@model Expense_Tracker.Models.Transaction


@* aca se pueden crear variables de C# para utilizar en el codigo htmlC# *@
@{
    ViewData["PageTitle"] = Model.TransactionId == 0 ? "Create a new transaction" : "Edit transaction";
    var minDate = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.Now.Day);
    
}

<hr />
<div class="row">
    <div class="col-md-7">
        <div class="widget p-5" style="background-color:#212b36">
            <form asp-action="AddOrEdit">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" name="TransactionId"  value="@Model.TransactionId"/>
                <div class="mb-3">
                    <ejs-datepicker ejs-for="Date" placeholder="Date" floatLabelType="Always" id="date"
                                    format="MMM-dd-yy" min="minDate" cssclass="e-custom-style"></ejs-datepicker>
                    <span asp-validation-for="Date" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    <ejs-dropdownlist id="ddlCategory" ejs-for="CategoryId" 
                    dataSource="@ViewBag.Categories" placeholder="Category"
                    floatLabelType="Always" allowFiltering="true" ignoreAccent="true"
                    filterType="Contains" popupHeight="250px"> 
                       @* este es el elemento que se usa para mostrar las opciones, ademas 
                           le decimos que al seleccionar lo que agarre sea el valor CategoryId
                        que es la llave foranea, ademas pasamos el atributo TitleWithIcon que
                        es del modelo Categoria que lo que hace es mostrar el nombre con iconos
                       *@
                        <e-dropdownlist-fields value="CategoryId" text="TitleWithIcon"> </e-dropdownlist-fields>
                    </ejs-dropdownlist>

                    <span asp-validation-for="CategoryId" class="text-danger"></span>
                </div>
                <div class="mb-3">
                    @* <ejs-textbox id="amount" placeholder="Amount" ejs-for="Amount" floatLabelType="Always"></ejs-textbox> *@
                    <span asp-validation-for="Amount" class="text-danger"></span>
                
                </div>
                <div class="mb-3">
                    <ejs-textbox id="note" placeholder="note" ejs-for="Note" floatlabeltype="Always"></ejs-textbox>
                    <span asp-validation-for="Note" class="text-danger"></span>
                </div>

                <ejs-button class="mt-3" cssClass="e-success" id="submit" type="submit" content="Submit"></ejs-button>
            </form>
        </div>
     
    </div>
    <div class="col-md-5">
        <div class="widget h-100 d-flex justify-content-center align-items-center " >
            <i class="fa-solid fa-money-bill-transfer fa-2xl text-light"></i>
        </div>
    </div>
</div>



@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
